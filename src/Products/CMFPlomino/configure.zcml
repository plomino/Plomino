<configure
    xmlns="http://namespaces.zope.org/zope"
    xmlns:five="http://namespaces.zope.org/five"
    xmlns:genericsetup="http://namespaces.zope.org/genericsetup"
    xmlns:i18n="http://namespaces.zope.org/i18n"
    i18n_domain="Products.CMFPlomino">

    <includeDependencies package="." />

    <i18n:registerTranslations directory="locales" />

    <include package="collective.instancebehavior" />
    <include package=".browser" />
    <include package=".fields" />


    <genericsetup:registerProfile
        name="default"
        title="Products.CMFPlomino"
        directory="profiles/default"
        description="Installs the Products.CMFPlomino add-on."
        provides="Products.GenericSetup.interfaces.EXTENSION"
        />

    <genericsetup:importStep
        name="Products.CMFPlomino-postInstall"
        title="Products.CMFPlomino post_install import step"
        description="Post install import step from Products.CMFPlomino"
        handler=".setuphandlers.post_install">
    </genericsetup:importStep>

    <genericsetup:upgradeSteps
        source="1002"
        destination="1003"
        profile="Products.CMFPlomino:default">
      <genericsetup:upgradeStep
          title="Update registry"
          description="Update bundles to add table.less"
          handler=".upgrades.run_registry_step"
          />
    </genericsetup:upgradeSteps>

    <subscriber
        for="Products.CMFPlomino.contents.database.IPlominoDatabase zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterDatabaseCreated"
        />

    <subscriber
        for="Products.CMFPlomino.contents.field.IPlominoField zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterFieldModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.field.IPlominoField zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterFieldModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.form.IPlominoForm zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterFormModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.form.IPlominoForm zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterFormModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.action.IPlominoAction zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterActionModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.action.IPlominoAction zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterActionModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.view.IPlominoView zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterViewCreated"
        />

    <subscriber
        for="Products.CMFPlomino.contents.view.IPlominoView zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterViewModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.column.IPlominoColumn zope.lifecycleevent.interfaces.IObjectAddedEvent"
        handler=".events.afterColumnModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.column.IPlominoColumn zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterColumnModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.agent.IPlominoAgent zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterAgentModified"
        />

    <subscriber
        for="Products.CMFPlomino.contents.hidewhen.IPlominoHidewhen zope.lifecycleevent.interfaces.IObjectModifiedEvent"
        handler=".events.afterHidewhenModified"
        />

    <utility
        name="Products.CMFPlomino.fields.vocabularies.get_views"
        provides="zope.schema.interfaces.IVocabularyFactory"
        component=".fields.vocabularies.get_views"
    />

    <utility
        name="Products.CMFPlomino.fields.vocabularies.get_forms"
        provides="zope.schema.interfaces.IVocabularyFactory"
        component=".fields.vocabularies.get_forms"
    />

    <adapter
       provides="z3c.form.interfaces.IDataManager"
       for=".contents.form.IPlominoForm
            zope.schema.interfaces.IField"
       factory=".contents.form.GetterSetterAttributeField"
       />



</configure>
