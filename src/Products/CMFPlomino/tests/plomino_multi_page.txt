Set up login account

    >>> portal = layer['portal']
    >>> memberName = 'siteManager'
    >>> portal.portal_membership.addMember(
    ...         memberName,
    ...         memberName,
    ...         ('Member', 'Manager',),
    ...         '',
    ...         {'fullname': 'Site Manager', 'email': memberName+'@dummy.fr',}
    ...         )
    >>> memberName = 'userManager'
    >>> portal.portal_membership.addMember(
    ...         memberName,
    ...         memberName,
    ...         ('Member',),
    ...         '',
    ...         {'fullname': 'Site Member', 'email': memberName+'@dummy.fr',}
    ...         )

Create plomino database and publish it::

    >>> db = portal.mydb
    >>> temp_storage = getattr(db,'temporary_files',None)
    >>> wf_tool = portal.portal_workflow
    >>> wf_tool.doActionFor(db, 'publish')
    >>> db.manage_setLocalRoles('userManager', ['PlominoManager'])

Create the browser object we'll be using::

    >>> browser = Browser(layer['app'])
    >>> browser.handleErrors = False
    >>> transaction.commit()  # enable the browser to see our changes

Open portal::

    >>> portal_url = portal.absolute_url()
    >>> browser.open(portal_url)

Log in with ``Site Manager`` access rights::

    >>> browser.getLink('Log in').click()
    >>> browser.getControl('Login Name').value = 'siteManager'
    >>> browser.getControl('Password').value = 'siteManager'
    >>> browser.getControl('Log in').click()


=============================================================================================================
View and edit document in the same page

* As the Edit button use JavaScript to redirect the form, we cannot test on clicking that button. Rather than,
we mimic the same edit link generated by the form and take it as the input to the browser
===========================================================================================================


Crate the main form
    >>> parent = db.invokeFactory('PlominoForm', id='parent1', title='Parent Form')
    >>> id = db.parent1.invokeFactory('PlominoField',
    ...             id='text_1',
    ...             title='Text 1',
    ...             field_type="TEXT",
    ...             field_mode="EDITABLE")
    >>> id = db.parent1.invokeFactory('PlominoField',
    ...             id='text_2',
    ...             title='Text 2',
    ...             field_type="TEXT",
    ...             field_mode="EDITABLE")
    >>> db.parent1.form_layout ="""<p><label for="text_1">Text 1</label><span class="plominoFieldClass">text_1</span></p>
    ... <hr class="plominoPagebreakClass">
    ... <p><label for="text_2">Text 2</label><span class="plominoFieldClass">text_2</span></p>
    ... <hr class="plominoPagebreakClass">"""

    >>> transaction.commit()
    >>> parent_form_url = portal_url +'/mydb' +'/parent1'


Create a document

    >>> browser.open(parent_form_url)
    >>> browser.getControl('Save').click()
    >>> doc_url = browser.url


View page 1 of saved document, and click edit

    >>> edit_doc_url = doc_url.split('pageview/1')[0]+ 'EditDocument?page=1'
    >>> browser.open(edit_doc_url)

The edit page should starts at page 1
    >>> 'Text 1' in browser.contents
    True

View page 2 of saved document, and click edit

    >>> edit_doc_url = doc_url.split('pageview/1')[0]+ 'EditDocument?page=2'
    >>> browser.open(edit_doc_url)


The edit page should starts at page 2
    >>> 'Text 2' in browser.contents
    True
