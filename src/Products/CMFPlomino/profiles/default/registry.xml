<registry>
  <record name="plone.inline_styles" interface="Products.CMFPlone.interfaces.controlpanel.ITinyMCESchema" field="inline_styles">
    <field type="plone.registry.field.List">
      <default>
        <element>Bold|bold|bold</element>
        <element>Italic|italic|italic</element>
        <element>Underline|underline|underline</element>
        <element>Strikethrough|strikethrough|strikethrough</element>
        <element>Superscript|superscript|superscript</element>
        <element>Subscript|subscript|subscript</element>
        <element>Code|code|code</element>
      </default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Name|format|icon</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Inline styles</title>
      <value_type type="plone.registry.field.TextLine"/>
    </field>
    <value>
      <element>Bold|bold|bold</element>
      <element>Italic|italic|italic</element>
      <element>Underline|underline|underline</element>
      <element>Strikethrough|strikethrough|strikethrough</element>
      <element>Superscript|superscript|superscript</element>
      <element>Subscript|subscript|subscript</element>
      <element>Code|code|code</element>
      <element>Plomino action|plominoaction|plominoaction</element>
      <element>Plomino field|plominofield|plominofield</element>
      <element>Plomino label|plominolabel|plominolabel</element>
      <element>Plomino hide-when|plominohidewhen|plominohidewhen</element>
      <element>Plomino subform|plominosubform|plominosubform</element>
    </value>
  </record>
  <record name="plone.formats" interface="Products.CMFPlone.interfaces.controlpanel.ITinyMCESchema" field="formats">
    <field type="plone.registry.field.Text">
      <default>{
    "clearfix": {
        "classes": "clearfix",
        "block": "div"
    },
    "discreet": {
        "inline": "span",
        "classes": "discreet"
    }
}</default>
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Enter a JSON-formatted style format configuration. A format is for example the style that get applied when you press the bold button inside the editor. See http://www.tinymce.com/wiki.php/Configuration:formats</description>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Formats</title>
    </field>
    <value>{
    "clearfix": {
        "classes": "clearfix",
        "block": "div"
    },
    "discreet": {
        "inline": "span",
        "classes": "discreet"
    },
    "plominofield": {
        "inline": "span",
        "classes": "plominoFieldClass"
    },
    "plominolabel": {
        "inline": "span",
        "classes": "plominoLabelClass"
    },
    "plominoaction": {
        "inline": "span",
        "classes": "plominoActionClass"
    },
    "plominohidewhen": {
        "inline": "span",
        "classes": "plominoHidewhenClass"
    },
    "plominosubform": {
        "inline": "span",
        "classes": "plominoSubformClass"
    }
}</value>
  </record>

  <records interface="Products.CMFPlone.interfaces.ITinyMCESchema"
           prefix="plone">
    <value purge="false" key="content_css">
      <element>++resource++Products.CMFPlomino/css/tinymce.css</element>
    </value>
    <value purge="false" key="custom_plugins">
      <element>plomino|++resource++Products.CMFPlomino/js/tinymce.js</element>
    </value>
    <value purge="false" key="custom_buttons">
      <element>plominofield</element>
      <element>plominolabel</element>
      <element>plominoaction</element>
      <element>plominosubform</element>
      <element>plominohidewhen</element>
      <element>plominocache</element>
      <element>plominopagebreak</element>
    </value>
  </records>

  <records prefix="plone.resources/plominoformula"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/formula.js</value>
  </records>

  <records prefix="plone.resources/plominotable"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/table.js</value>
    <value key="css">
        <element>++resource++Products.CMFPlomino/css/table.less</element>
    </value>
</records>

  <records prefix="plone.resources/plominodesign"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="css">
        <element>++resource++Products.CMFPlomino/css/design.less</element>
        <element>++resource++Products.CMFPlomino/css/form.less</element>
    </value>
  </records>

  <records prefix="plone.resources/plominodynamic"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/dynamic.js</value>
  </records>

  <records prefix="plone.resources/plominomultipage"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/multipage.js</value>
  </records>

  <records prefix="plone.resources/plominodatagrid"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/datagrid.js</value>
  </records>

  <records prefix="plone.resources/plominomacros"
           interface='Products.CMFPlone.interfaces.IResourceRegistry'>
    <value key="js">++resource++Products.CMFPlomino/js/macros.js</value>
  </records>


  <records prefix="plone.bundles/plomino"
           interface='Products.CMFPlone.interfaces.IBundleRegistry'>
    <value key="resources">
      <element>plominoformula</element>
      <element>plominotable</element>
      <element>plominodesign</element>
      <element>plominodynamic</element>
      <element>plominodatagrid</element>
      <element>plominomultipage</element>
      <element>plominomacros</element>
    </value>
    <value key="merge_with">default</value>
    <value key="enabled">True</value>
    <value key="depends">plone</value>
        <value key="stub_js_modules">
      <element>jquery</element>
      <element>mockup-patterns-modal</element>
      <element>mockup-patterns-tree</element>
      <element>mockup-patterns-texteditor</element>
      <element>mockup-utils</element>
      <element>pat-base</element>
      <element>pat-utils</element>
    </value>
    <value key="jscompilation">++resource++Products.CMFPlomino/js/plomino-compiled.js</value>
    <value key="csscompilation">++resource++Products.CMFPlomino/css/plomino-compiled.css</value>
    <value key="last_compilation">2016-09-28 00:00:00</value>
  </records>

  <record name="plone.displayed_types" interface="Products.CMFPlone.interfaces.controlpanel.INavigationSchema" field="displayed_types">
    <field type="plone.registry.field.Tuple">
      <description xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">The content types that should be shown in the navigation and site map.</description>
      <missing_value/>
      <required>False</required>
      <title xmlns:ns0="http://xml.zope.org/namespaces/i18n" ns0:domain="plone" ns0:translate="">Displayed content types</title>
      <value_type type="plone.registry.field.Choice">
        <vocabulary>plone.app.vocabularies.ReallyUserFriendlyTypes</vocabulary>
      </value_type>
    </field>
    <value purge="false">
      <element>PlominoDatabase</element>
    </value>
  </record>
</registry>
