<tal:block tal:define="v options/fieldvalue;
                       db python:options['field'].getParentDatabase();
                       defaultformat python:db.getDateTimeFormat();
                       fieldformat python:options['field'].getSettings('format');
                       starting_year python:options['field'].getSettings('startingyear');
                       ending_year python:options['field'].getSettings('endingyear');
                       format python:test(not(fieldformat), defaultformat, fieldformat);
                       hm python:('%H' in format or '%I' in format);
                       ymd python:('%Y' in format or '%y' in format);
                       mandatory python: 'mandatory' if options['field'].getMandatory() else '';
                       widget python:options['field'].getSettings('widget');">
    <tal:widget tal:condition="python: widget=='JQUERY'">
        <input type="text"
            tal:define="inputvalue python: '' if not options['fieldvalue'] else options['fieldvalue'].strftime(format);"
            tal:attributes="name options/fieldname;
                id options/fieldname;
                class python: 'date' if not mandatory else 'date mandatory';
                data-datepicker-dateformat python: format.replace('%Y', 'yy').replace('%m', 'mm').replace('%d', 'dd');
                data-datepicker-mindate python: '' if (not starting_year) or (not starting_year.isdigit()) else DateTime(int(starting_year), 1, 1).strftime(format);
                data-datepicker-maxdate python: '' if (not ending_year) or (not ending_year.isdigit()) else DateTime(int(ending_year), 12, 31).strftime(format);
                value inputvalue">
    </tal:widget>
    <tal:widget tal:condition="python:test(widget=='SERVER')">
        <tal:block tal:condition="python:test(v)">
            <span>
                <tal:define tal:define="id options/fieldname;
                                show_hm hm|nothing;
                                show_ymd ymd|nothing;
                                future_years nothing;
                                inputname options/fieldname;
                                formname string:edit_form;
                                ymd_fmt python:test(show_ymd, '%Y-%m-%d', '');
                                hm_fmt python:test(show_hm, '%I:%M %p', '');
                                inputvalue python:same_type(v, '') and v or v.strftime(' '.join([ymd_fmt, hm_fmt]).strip());">
                    <metal:box use-macro="here/DATETIMETool/macros/calendarDatePickerBox">
                    a calendar, hopefully
                    </metal:box>
            </tal:define>
            </span>
        </tal:block>
        <tal:block tal:condition="python:test(not(v))">
            <span>
                <tal:define tal:define="id options/fieldname;
                                show_hm hm|nothing;
                                show_ymd ymd|nothing;
                                starting_year python:options['field'].getSettings('startingyear');
                                ending_year python:options['field'].getSettings('endingyear');
                                future_years nothing;
                                inputname options/fieldname;
                                formname string:edit_form;
                                inputvalue python:'';">
                    <metal:box use-macro="here/DATETIMETool/macros/calendarDatePickerBox">
                    a calendar, hopefully
                    </metal:box>
            </tal:define>
            </span>
        </tal:block>
    </tal:widget>
</tal:block>
